@model WebChat.Models.AuthenticationModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="@Url.Content("~/Content/bootstrap.min.css")">
    <link rel="stylesheet" href="@Url.Content("~/Content/loginRegister.css")">
    <title>Đăng nhập</title>
</head>

<body>
    <div class="login-wrap">
        <div class="login-html">
            <input id="tab-1" type="radio" name="tab" class="sign-in" checked><label for="tab-1" class="tab">
                Đăng
                nhập
            </label>
            <input id="tab-2" type="radio" name="tab" class="sign-up"><label for="tab-2" class="tab">Đăng kí</label>
            <div class="login-form">
                @using (Html.BeginForm("Login", "Authentication", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="sign-in-htm">
                        <div class="group">
                            <label for="user" class="label">Tên đăng nhập</label>
                            @Html.TextBoxFor(s => s.Login.Username, new { @id = "user", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Login.Username, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="pass" class="label">Mật khẩu</label>
                            @Html.PasswordFor(s => s.Login.Password, new { @id = "pass", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Login.Password, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            @Html.CheckBoxFor(s => s.Login.IsRemember, new { @id = "check" })
                            <label for="check"><span class="icon"></span> Nhớ đăng nhập</label>
                        </div>
                        @if (TempData["ErrorMSG"] != null)
                        {
                            <label class="noti"> @TempData["ErrorMSG"] </label>
                            <br />
                        }
                        <div class="group">
                            <input type="submit" class="button" value="Đăng nhập">
                        </div>
                        <div class="hr"></div>
                        <div class="foot-lnk">
                            <a href="#forgot">Quên mật khẩu</a>
                        </div>
                    </div>
                }
                @using (Html.BeginForm("Register", "Authentication", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(s => s.Regesiter.IsSignUp, new { @id = "isSignUp" })
                    <div class="sign-up-htm">
                        <div class="group">
                            <label for="user2" class="label">Tên đăng nhập</label>
                            @Html.TextBoxFor(s => s.Regesiter.Username, new { @id = "user2", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Regesiter.Username, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="pass2" class="label">Mật khẩu</label>
                            @Html.PasswordFor(s => s.Regesiter.Password, new { @id = "pass2", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Regesiter.Password, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="repass" class="label">Nhập lại mật khẩu</label>
                            @Html.PasswordFor(s => s.Regesiter.RePassword, new { @id = "repass", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Regesiter.RePassword, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="email" class="label">Email</label>
                            @Html.TextBoxFor(s => s.Regesiter.Email, new { @id = "email", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Regesiter.Email, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="fullname" class="label">Họ và tên</label>
                            @Html.TextBoxFor(s => s.Regesiter.Fullname, new { @id = "fullname", @class = "input" })
                            @Html.ValidationMessageFor(s => s.Regesiter.Fullname, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="birth" class="label">Ngày sinh</label>
                            @Html.TextBoxFor(s => s.Regesiter.Birth, new { @id = "birth", @class = "input", @placeholder = "dd/mm/yyyy" })
                            @Html.ValidationMessageFor(s => s.Regesiter.Birth, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <label for="birth" class="label">Giới tính</label>
                            <div class="form-check-inline">
                                <label class="form-check-label">
                                    @Html.RadioButtonFor(s => s.Regesiter.Gender, "Male", new { @id = "male", @class = "form-check-input" }) <label for="male">Nam</label>
                                </label>
                            </div>
                            <div class="form-check-inline">
                                <label class="form-check-label">
                                    @Html.RadioButtonFor(s => s.Regesiter.Gender, "Female", new { @id = "female", @class = "form-check-input" }) <label for="female">Nữ</label>
                                </label>
                            </div>
                            @Html.ValidationMessageFor(s => s.Regesiter.Gender, "", new { @class = "noti-error" })
                        </div>
                        <div class="group">
                            <input type="submit" class="button" value="Đăng kí">
                        </div>
                        <div class="hr"></div>
                        <div class="foot-lnk">
                            <label for="tab-1">Đã là thành viên?</label>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <script src="@Url.Content("~/Scripts/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/cleave.min.js")"></script>
    <script>
        new Cleave('#birth', {
            date: true,
            datePattern: ['d', 'm', 'Y']
        });

        //If sign up return any error
        var value = $("#isSignUp").val();
        if (value !== "False" && value !== "") {
            $("#tab-2").click();
            $("#isSignUp").val("True");
        }

        //Change title end clear input when click tab
        $("#tab-1").on("click", function () {
            document.title = "Đăng nhập";
            $(".input").val("");
            $("#isSignUp").val("False");
        });
        $("#tab-2").on("click", function () {
            document.title = "Đăng kí";
            $(".input").val("");
            $("#isSignUp").val("True");
        });

        //detect param on URL and select correct form
        var currentUrl = new URL(window.location.href);
        var login = currentUrl.searchParams.get("login");
        var register = currentUrl.searchParams.get("register");
        if (login !== null) {
            $("#tab-1").click();
        } else if (register !== null) {
            $("#tab-2").click();
        }
    </script>
</body>
</html>

